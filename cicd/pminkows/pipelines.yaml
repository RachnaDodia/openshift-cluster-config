apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: quay-registry-secret
  namespace: pminkows-cicd
spec:
  encryptedData:
    .dockerconfigjson: AgA047Dow7dgrtGcotwRsetiiI/hE9mdH0Fh4DM1HDnwxUAUehOTFj24mJpTSwGZ90Dy1DujnSpJJGf8HHppQRgvYrs7ZrYKLavhevoKc39kb7s2ssY4gyV2ekpiIenrVklCODuG4UJX2LQDiEodzMhIikkqfES9MCbKbOTrmOt5hG4AIUCKQ9Df//Buse1NaG7O0FsglWZq/sF2cw8HEsxs0ZbnNv4c02vqzlC0aiaN0IrfY9I0TtzYdUth5C/9jvckEXQcjckuAMgEc/7QxB6MBeLEMHpSKYSScb/WPnPtOijdcfxfonVxsbqCAGeOtQZVnI4ryXicSdlAu3/Sm4nzsUWjWiuOZ7sn4ouq7/bB3soFaviO7hArGWCn0ujHz3NsI3Zaw6/pgG362FS8DiFo8C5w3oCIhMdN9aXPFl0TqELYvMIWDLPiAzufnQvk/4LtpGlgDq+4PC+qGXpwFkUl+OqZJCd/+/euHzPd3/UfB6yZYy+1zwCGub9xwxWLOaA+yt26zfPjLfQWibUYTQSm0ucdzbT1gKLdVm+jOe5bx0+Zd3b7ExcnUhxjN7L9BK1OFkp68KOoERxftIL239GsKVGcSphH7OJKXsb9iV9ZHRuwp9zhvGA/wgdFXQ9Bih4njlmNL4YwS6jc4D8dzs/JTcohwbghrwUIsY8sWZPEI8zEQwXF7k59RW9rysu2HKhoFFc/173WHZ66Fc2lDr6mCRZVUf46/+7KP0Sgh7XYlpnxB20HTwaKVjzuUv86ETEIVMmXIfSAhtjON3OUgS9HDLhZTLln2PRUNSdb7b3OABRClu2R7tUo1tzzOCBkWYcSZqFOF88D3PTCxMg2jCK8emiDcM4uVKX7PPjtTULDiLogdDCTTJKL32An0fpyTyD17RMj+6Th9Vvw7wHX7jwSs6zxGtYVraED0E7VmeuMOzlR58yibr9goKM1
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: cicd-config
      name: quay-registry-secret
      namespace: pminkows-cicd
    type: kubernetes.io/dockerconfigjson
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: ResourceLocker
metadata:
  name: patch-pipeline-service-account
  namespace: openshift-gitops
spec:
  patches:
    - id: patch1
      patchTemplate: |
        secrets:
          - name: quay-registry-secret
      patchType: application/strategic-merge-patch+json
      sourceObjectRefs:
        - apiVersion: v1
          name: openshift-gitops
          kind: Namespace
        - apiVersion: v1
          name: openshift-gitops-argocd-application-controller
          namespace: openshift-gitops
          kind: ServiceAccount
      targetObjectRef:
        apiVersion: v1
        name: pipeline
        namespace: pminkows-cicd
        kind: ServiceAccount
  serviceAccountRef:
    name: openshift-gitops-argocd-application-controller
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pipelines-scc-rolebinding
  namespace: pminkows-cicd
subjects:
  - kind: ServiceAccount
    name: pipeline
    namespace: pminkows-cicd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pipelines-scc-clusterrole
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: dotnet-pipeline-pvc
  namespace: pminkows-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: sample-dotnet-pipeline
  namespace: pminkows-cicd
spec:
  params:
    - name: APP_VERSION
      description: Version number of application
      type: string
    - name: DOTNET_VERSION
      description: Version of .NET framework
      type: string
    - name: TESTS_DIR
      description: The name of the directory with unit tests
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: 'https://github.com/piomin/s2i-dotnetcore-ex.git'
        - name: revision
          value: dotnet-5.0
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:afc5d3f9efe26c7042635d43b8ffd09d67936e3d0b6b901dc08a33e20313d361
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: s2i-dotnet
      params:
        - name: BUILDER_IMAGE
          value: >-
            registry.redhat.io/rhel8/buildah@sha256:6a68ece207bc5fd8db2dd5cc2d0b53136236fb5178eb5b71eebe5d07a3c33d13
        - name: VERSION
          value: $(params.DOTNET_VERSION)
        - name: PATH_CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'false'
        - name: IMAGE
          value: >-
            quay.io/pminkows/sample-dotnetcore-ex:$(params.APP_VERSION)
      runAfter:
        - dotnet-test
      taskRef:
        kind: ClusterTask
        name: s2i-dotnet
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: dotnet-test
      params:
        - name: DOTNET_IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/openshift/dotnet:$(params.DOTNET_VERSION)
        - name: TEST_DIR
          value: $(params.TESTS_DIR)
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: dotnet-test
      workspaces:
        - name: source
          workspace: shared-workspace
  workspaces:
    - name: shared-workspace
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: maven-settings
  namespace: pminkows-cicd
data:
  settings.xml: >-
    <?xml version="1.0" encoding="UTF-8"?>
    <settings xmlns="http://maven.apache.org/SETTINGS/1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd">

    </settings>
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: sonar-properties
  namespace: pminkows-cicd
data:
  sonar-project.properties: sonar.organization=piomin
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: kotlin-pipeline-pvc
  namespace: pminkows-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: sample-kotlin-pipeline
  namespace: pminkows-cicd
spec:
  finally:
    - name: s2i-java
      params:
        - name: PATH_CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'false'
        - name: MAVEN_ARGS_APPEND
          value: ''
        - name: MAVEN_CLEAR_REPO
          value: 'false'
        - name: IMAGE
          value: >-
            quay.io/pminkows/sample-kotlin-spring:$(tasks.get-version.results.version)
      taskRef:
        kind: ClusterTask
        name: s2i-java
      workspaces:
        - name: source
          workspace: source-dir
  tasks:
    - name: git-clone
      params:
        - name: url
          value: 'https://github.com/piomin/sample-spring-kotlin-microservice.git'
        - name: revision
          value: s2i
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'false'
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: source-dir
    - name: maven
      params:
        - name: MAVEN_IMAGE
          value: >-
            gcr.io/cloud-builders/mvn@sha256:57523fc43394d6d9d2414ee8d1c85ed7a13460cbb268c3cd16d28cfb3859e641
        - name: GOALS
          value:
            - test
        - name: PROXY_PROTOCOL
          value: http
        - name: CONTEXT_DIR
          value: .
      runAfter:
        - git-clone
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: source-dir
        - name: maven-settings
          workspace: maven-settings
    - name: sonarqube
      params:
        - name: SONAR_HOST_URL
          value: 'https://sonarcloud.io'
        - name: SONAR_PROJECT_KEY
          value: sample-spring-kotlin
      runAfter:
        - maven
      taskRef:
        kind: Task
        name: sonarqube-scanner
      workspaces:
        - name: source-dir
          workspace: source-dir
        - name: sonar-settings
          workspace: sonar-settings
    - name: get-version
      params:
        - name: MAVEN_IMAGE
          value: >-
            gcr.io/cloud-builders/mvn@sha256:57523fc43394d6d9d2414ee8d1c85ed7a13460cbb268c3cd16d28cfb3859e641
        - name: CONTEXT_DIR
          value: .
      runAfter:
        - sonarqube
      taskRef:
        kind: Task
        name: maven-get-project-version
      workspaces:
        - name: source
          workspace: source-dir
  workspaces:
    - name: source-dir
    - name: maven-settings
    - name: sonar-settings
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: dotnet-multiproj-pipeline-pvc
  namespace: pminkows-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: sample-dotnet-multiproj-pipeline
  namespace: pminkows-cicd
spec:
  params:
    - name: APP_VERSION
      description: Version number of application
      type: string
    - name: DOTNET_VERSION
      description: Version of .NET framework
      type: string
    - name: TESTS_DIR
      description: The name of the directory with unit tests
      type: string
    - name: APP_PROJECT
      description: The file with project .csproj
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: 'https://github.com/piomin/web-api-2.git'
        - name: revision
          value: dotnet:5.0-ubi8
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: s2i-dotnet-multiproj
      params:
        - name: VERSION
          value: $(params.DOTNET_VERSION)
        - name: APP_PROJECT
          value: web-api/web-api.csproj
        - name: PATH_CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'false'
        - name: IMAGE
          value: >-
            quay.io/pminkows/web-api-2:$(params.APP_VERSION)
      runAfter:
        - dotnet-test
      taskRef:
        kind: ClusterTask
        name: s2i-dotnet
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: dotnet-test
      params:
        - name: DOTNET_IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/openshift/dotnet:$(params.DOTNET_VERSION)
        - name: TEST_DIR
          value: $(params.TESTS_DIR)
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: dotnet-test
      workspaces:
        - name: source
          workspace: shared-workspace
  workspaces:
    - name: shared-workspace